{
  "name": "aliasify",
  "version": "1.9.0",
  "description": "Rewrite require calls in browserify modules.",
  "main": "./lib/aliasify.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/benbria/aliasify.git"
  },
  "keywords": [
    "browserify",
    "alias"
  ],
  "author": {
    "name": "Jason Walton",
    "url": "https://github.com/jwalton"
  },
  "contributors": [
    {
      "name": "Jason Walton",
      "email": "dev@lucid.thedreaming.org",
      "url": "https://github.com/jwalton"
    }
  ],
  "license": "MIT",
  "directories": {
    "lib": "./lib"
  },
  "dependencies": {
    "browserify-transform-tools": "~1.5.1"
  },
  "devDependencies": {
    "coffee-coverage": "^0.7.0",
    "coffee-script": "^1.8.0",
    "coveralls": "^2.11.6",
    "es6-promise": "^3.0.2",
    "istanbul": "^0.4.1",
    "mocha": "^2.1.0",
    "promise-breaker": "^3.0.0"
  },
  "scripts": {
    "test": "mocha && istanbul report text-summary lcov",
    "prepublish": "coffee -c -o lib src && mocha test",
    "build": "coffee -c -o lib src"
  },
  "readme": "[![Build Status](https://travis-ci.org/benbria/aliasify.svg)](https://travis-ci.org/benbria/aliasify)\n[![Coverage Status](https://coveralls.io/repos/benbria/aliasify/badge.svg?branch=master&service=github)](https://coveralls.io/github/benbria/aliasify?branch=master)\n\nAliasify is a [transform](https://github.com/substack/node-browserify#btransformtr) for [browserify](https://github.com/substack/node-browserify) which lets you rewrite calls to `require`.\n\nInstallation\n============\n\nInstall with `npm install --save-dev aliasify`.\n\nUsage\n=====\n\nTo use, add a section to your package.json:\n\n    {\n        \"aliasify\": {\n            \"aliases\": {\n                \"d3\": \"./shims/d3.js\",\n                \"underscore\": \"lodash\"\n            }\n        }\n    }\n\nNow if you have a file in src/browserify/index.js which looks like:\n\n    d3 = require('d3')\n    _ = require('underscore')\n    ...\n\nThis will automatically be transformed to:\n\n    d3 = require('../../shims/d3.js')\n    _ = require('lodash')\n    ...\n\nAny replacement that starts with a \".\" will be resolved as a relative path (as \"d3\" above.)  Replacements that start with any other character will be replaced verbatim (as with \"underscore\" above.)\n\nConfiguration\n=============\n\nConfiguration can be loaded in multiple ways;  You can put your configuration directly in package.json, as in the example above, or you can use an external json or js file.  In your package.json:\n\n    {\n        \"aliasify\": \"./aliasifyConfig.js\"\n    }\n\nThen in aliasifyConfig.js:\n\n    module.exports = {\n        aliases: {\n            \"d3\": \"./shims/d3.js\"\n        },\n        verbose: false\n    };\n\nNote that using a js file means you can change your configuration based on environment variables.\n\nAlternatively, if you're using the Browserify API, you can configure your aliasify programatically:\n\n    aliasifyConfig = {\n        aliases: {\n            \"d3\": \"./shims/d3.js\"\n        },\n        verbose: false\n    }\n\n    var b = browserify();\n    b.transform(aliasify, aliasifyConfig);\n\nnote that using the browserify API, './shims/d3.js' will be resolved against the current working\ndirectory.\n\nConfiguration options:\n* `aliases` - An object mapping aliases to their replacements.\n* `replacements` - An object mapping RegExp strings with RegExp replacements, or a function that will return a replacement.\n* `verbose` - If true, then aliasify will print modifications it is making to stdout.\n* `configDir` - An absolute path to resolve relative paths against.  If you're using package.json, this will automatically be filled in for you with the directory containing package.json.  If you're using a .js file for configuration, set this to `__dirname`.\n* `appliesTo` - Controls which files will be transformed.  By default, only JS type files will be transformed ('.js', '.coffee', etc...).  See [browserify-trasnform-tools documentation](https://github.com/benbria/browserify-transform-tools/wiki/Transform-Configuration#common-configuration) for details.\n\nRelative Requires\n=================\n\nWhen you specify:\n\n    aliases: {\n        \"d3\": \"./shims/d3.js\"\n    }\n\nThe \"./\" means this will be resolved relative to the current working directory (or relative to the\nconfiguration file which contains the line, in the case where configuration is loaded from\npackage.json.)  Sometimes it is desirable to literally replace an alias; to resolve the alias\nrelative to the file which is doing the `require` call.  In this case you can do:\n\n    aliases: {\n        \"d3\": {\"relative\": \"./shims/d3.js\"}\n    }\n\nThis will cause all occurences of `require(\"d3\")` to be replaced with `require(\"./shims/d3.js\")`,\nregardless of where those files are in the directory tree.\n\nRegular Expression Aliasing\n===========================\nYou can use the `replacements` configuration section to create more powerful aliasing.  This is useful if you\nhave a large project but don't want to manually add an alias for every single file.  It is also incredibly useful when you want to combine\naliasify with other transforms, such as hbsfy, reactify, or coffeeify.\n\n    replacements: {\n        \"_components/(\\\\w+)\": \"src/react/components/$1/index.jsx\"\n    }\n\nWill let you replace `require('_components/SomeCoolReactComponent')` with `require('src/react/components/SomeCoolReactComponent/index.jsx')`\n\nYou can also match an alias and pass a function which can return a new file name.\n\n`require(\"_coffee/delicious-coffee\");`\n\nUsing this configuration:\n\n    replacements: {\n        \"_coffee/(\\\\w+)\": function (alias, regexMatch, regexObject) {\n            console.log(alias); // _coffee/delicious-coffee\n            console.log(regexMatch); // _coffee/(\\\\w+)\n            return 'coffee.js'; // default behavior - won't replace\n        }\n    }\n\n\nStubbing Out Packages\n=====================\n\nYou can remove a package entirely for browser builds using:\n\n    aliases: {\n        \"d3\": \"./shims/d3.js\"\n    }\n\nNow any code which tries to `require('d3')` will end up compiling to:\n\n    var d3 = {};\n\nAlternatives\n============\n\n`aliasify` is essentially a fancy version of the [`browser` field](https://gist.github.com/defunctzombie/4339901#replace-specific-files---advanced) from package.json, which is [interpreted](https://github.com/substack/node-browserify#packagejson) by browserify.\n\nUsing the `browser` field is probably going to be faster, as it doesn't involve running a transform on each of your files.  On the other hand, `aliasify` gives you a finer degree of control and can be run before other transforms (for example, you can run `aliasify` before [debowerify](https://github.com/eugeneware/debowerify), which will let you replace certain components that debowerify would otherwise replace.)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/benbria/aliasify/issues"
  },
  "homepage": "https://github.com/benbria/aliasify#readme",
  "_id": "aliasify@1.9.0",
  "_shasum": "03aa1a5fe5b4cac604e3b967bc4c7ceacf957030",
  "_resolved": "https://registry.npmjs.org/aliasify/-/aliasify-1.9.0.tgz",
  "_from": "https://registry.npmjs.org/aliasify/-/aliasify-1.9.0.tgz"
}
