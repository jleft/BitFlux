{
  "name": "grunt-template",
  "version": "0.2.3",
  "description": "Grunt plugin that interpolates template files with any data you provide and saves the result to another file.",
  "author": {
    "name": "Mathias Bynens",
    "url": "http://mathiasbynens.be/"
  },
  "homepage": "http://git.io/grunt-template",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://mths.be/mit"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/mathiasbynens/grunt-template.git"
  },
  "bugs": {
    "url": "https://github.com/mathiasbynens/grunt-template/issues"
  },
  "files": [
    "LICENSE-MIT.txt",
    "tasks/"
  ],
  "directories": {
    "test": "tests"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {},
  "devDependencies": {
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-nodeunit": "~0.2.2",
    "grunt": "~0.4.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "template"
  ],
  "readme": "# grunt-template [![Build status](https://travis-ci.org/mathiasbynens/grunt-template.png?branch=master)](https://travis-ci.org/mathiasbynens/grunt-template) [![Dependency status](https://gemnasium.com/mathiasbynens/grunt-template.png)](https://gemnasium.com/mathiasbynens/grunt-template)\n\nThis Grunt plugin interpolates template files with any data you provide and saves the result to another file.\n\nSince [`grunt.template.process`](https://github.com/gruntjs/grunt/wiki/grunt.template#wiki-grunt-template-process) is used for the templating, this Grunt plugin is very lightweight and doesn’t have any dependencies (other than Grunt itself).\n\n## Getting started\n\nThis plugin requires Grunt v0.4.0+.\n\nIf you haven’t used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you’re familiar with that process, you may install this plugin with this command:\n\n```bash\nnpm install grunt-template --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-template');\n```\n\n## The `template` task\n\n### Overview\n\nIn your project’s Gruntfile, add a section named `template` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n\t'template': {\n\t\t'options': {\n\t\t\t// Task-specific options go here\n\t\t},\n\t\t'your-target': {\n\t\t\t'options': {\n\t\t\t\t// Target-specific options go here\n\t\t\t},\n\t\t\t'files': {\n\t\t\t\t// Target-specific file lists go here\n\t\t\t}\n\t\t}\n\t}\n});\n```\n\n### Options\n\nThe `options` property accepts the following options:\n\n#### `data`\nType: `Object` or `Function`\nDefault: `{}`\n\nThis object contains the data that will be used while interpolating the template files. If you pass a function instead, it will be called when grunt-template needs the template data (lazy evaluation). This is useful if you want to load data from a file that is generated by another Grunt task, for example.\n\n#### `delimiters`\nType: `String` or `Function`\nDefault: `config`\n\nThis is the delimiters' name that will be used to interpolate and evaluate code. A function that returns this name can be used too.\nThis property is useful when you want to generate JSP/ERB like code and you need the default interpolation delimiters to be `<%` and `%>`. See below for an example.\n\n### Template syntax\n\nUnder the hood, grunt-template uses [`grunt.template.process`](https://github.com/gruntjs/grunt/wiki/grunt.template#wiki-grunt-template-process), which in turn relies on [Lo-Dash’s `_.template()` method](http://lodash.com/docs#template). Here’s a quick reminder of the default delimiters:\n\n* Use `<%= value %>` to interpolate any values directly, i.e. inject them into the template without any modifications.\n* Use `<%- value %>` to interpolate an HTML-escaped version of a given value. Use this if you’re generating an HTML file and you’re using unknown input data.\n\nFor more details and examples, see the [Lo-Dash’s API documentation for the `_.template()` method](http://lodash.com/docs#template).\n\n### Usage example\n\nHere’s a practical example of grunt-template. Here, the file `src/post.html.tpl` is loaded, then parsed as a template using the provided `data` object (with `title`, `author` and `content` properties), and finally the result is saved as `dist/post.html`.\n\n#### `src/post.html.tpl`\n\n```html\n<!DOCTYPE html>\n<title><%- title %></title>\n<h1><%- title %>, by <%- author %></h1>\n<p><%- content %></p>\n```\n\n#### `Gruntfile.js`\n\n```js\nmodule.exports = function(grunt) {\n\tgrunt.initConfig({\n\t\t'template': {\n\t\t\t'process-html-template': {\n\t\t\t\t'options': {\n\t\t\t\t\t'data': {\n\t\t\t\t\t\t'title': 'My blog post',\n\t\t\t\t\t\t'author': 'Mathias Bynens',\n\t\t\t\t\t\t'content': 'Lorem ipsum dolor sit amet.'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'files': {\n\t\t\t\t\t'dist/post.html': ['src/post.html.tpl']\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tgrunt.loadNpmTasks('grunt-template');\n\tgrunt.registerTask('default', [\n\t\t'template'\n\t]);\n};\n```\n\n#### `dist/post.html` (the end result)\n\n```html\n<!DOCTYPE html>\n<title>My blog post</title>\n<h1>My blog post, by Mathias Bynens</h1>\n<p>Lorem ipsum dolor sit amet.</p>\n```\n\n#### `Gruntfile.js` (using a custom delimiter)\n\n```js\nmodule.exports = function(grunt) {\n\tgrunt.template.addDelimiters('handlebars-like-delimiters', '{{', '}}')\n\tgrunt.initConfig({\n\t\t'template': {\n\t\t\t'process-html-template': {\n\t\t\t\t'options': {\n\t\t\t\t\t'data': {\n\t\t\t\t\t\t'title': 'My blog post',\n\t\t\t\t\t\t'author': 'Mathias Bynens',\n\t\t\t\t\t\t'content': 'Lorem ipsum dolor sit amet.'\n\t\t\t\t\t},\n\t\t\t\t\t'delimiters': 'handlebars-like-delimiters'\n\t\t\t\t},\n\t\t\t\t'files': {\n\t\t\t\t\t'dist/post.html': ['src/post.html.tpl']\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tgrunt.loadNpmTasks('grunt-template');\n\tgrunt.registerTask('default', [\n\t\t'template'\n\t]);\n};\n```\n\n#### `src/post.html.tpl` (using a custom delimiter)\n\n```html\n<!DOCTYPE html>\n<title>{{- title }}</title>\n<h1>{{- title }}, by {{- author }}</h1>\n<p>{{- content }}</p>\n```\n\n\n## Notes\n\nIf you use [gulp](https://github.com/wearefractal/gulp) instead of Grunt, but want to perform a similar task, use [gulp-template](https://github.com/sindresorhus/gulp-template).\n\n## Author\n\n| [![twitter/mathias](http://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](http://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](http://mathiasbynens.be/) |\n\n## License\n\ngrunt-template is available under the [MIT](http://mths.be/mit) license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-template@0.2.3",
  "_shasum": "24155afea78984be6730c1c773bb92de8747a370",
  "_resolved": "https://registry.npmjs.org/grunt-template/-/grunt-template-0.2.3.tgz",
  "_from": "https://registry.npmjs.org/grunt-template/-/grunt-template-0.2.3.tgz"
}
