{
  "name": "grunt-svg-sprite",
  "description": "SVG sprites & stacks galore — Grunt plugin wrapping around svg-sprite that reads in a bunch of SVG files, optimizes them and creates SVG sprites and CSS resources in various flavours",
  "version": "1.2.19",
  "homepage": "https://github.com/jkphl/grunt-svg-sprite",
  "author": {
    "name": "Joschi Kuphal",
    "email": "joschi@kuphal.net",
    "url": "https://jkphl.is"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jkphl/grunt-svg-sprite.git"
  },
  "bugs": {
    "url": "https://github.com/jkphl/grunt-svg-sprite/issues"
  },
  "license": "MIT",
  "engines": {
    "node": ">= 0.10.0"
  },
  "files": [
    "tasks",
    "CHANGELOG.md"
  ],
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "grunt": "^0.4.5",
    "chalk": "^1.1.1",
    "prettysize": "^0.0.3",
    "svg-sprite": "~1.2.19"
  },
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-contrib-clean": "^0.7.0",
    "grunt-contrib-jshint": "^0.11.3",
    "grunt-contrib-nodeunit": "^0.4.1",
    "image-diff": "^1.2.0",
    "svg2png": "2.1.0"
  },
  "keywords": [
    "gruntplugin",
    "icon",
    "icons",
    "svg",
    "png",
    "sprite",
    "spritesheet",
    "stack",
    "generator",
    "css",
    "sass",
    "less",
    "stylus",
    "stylesheet",
    "inline",
    "html",
    "vector",
    "rwd",
    "retina",
    "mustache"
  ],
  "readme": "# grunt-svg-sprite [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][depstat-image]][depstat-url]  [![Development Dependency Status][devdepstat-image]][devdepstat-url]  [![Peer Dependency Status][peerdepstat-image]][peerdepstat-url]\n\nis a Grunt plugin wrapping around [svg-sprite](https://github.com/jkphl/svg-sprite) which **takes a bunch of [SVG](http://www.w3.org/TR/SVG/) files**, optimizes them and bakes them into **SVG sprites** of several types:\n\n*\tTraditional [CSS sprites](http://en.wikipedia.org/wiki/Sprite_(computer_graphics)#Sprites_by_CSS) for use as background images,\n*\tCSS sprites with **pre-defined `<view>` elements**, useful for foreground images as well,\n*\tinline sprites using the **`<defs>` element**,\n*\tinline sprites using the **`<symbol>` element**\n*\tand [SVG stacks](http://simurai.com/blog/2012/04/02/svg-stacks/).\n\n## Features & configuration? → [svg-sprite](https://github.com/jkphl/svg-sprite)\n\nThis document covers only Grunt specific installation and configuration aspects. For a full list of features and options, please see the [svg-sprite manual](https://github.com/jkphl/svg-sprite).\n\n## Getting Started\n\nThis plugin requires Grunt `^0.4.5`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-svg-sprite --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-svg-sprite');\n```\n\n## The «svg_sprite» task\n\n### Overview\n\nIn your project's Gruntfile, add a section named `svg_sprite` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n\tsvg_sprite\t\t: {\n\t\toptions\t\t: {\n\t\t\t// Task-specific options go here.\n\t\t},\n\t\tyour_target\t: {\n\t\t\t// Target-specific file lists and/or options go here.\n\t\t},\n\t},\n});\n```\n\nThe task-specific `options` are optional and affect all defined targets. You may define as many targets (`your_target`) as you want.\n\n### Targets\n\nIn the simplest case an «svg_sprite» target looks like this:\n\n```js\nyour_target: {\n\tsrc\t\t\t: ['path/to/assets/**/*.svg'],\n\tdest\t\t: 'path/to/css/dir',\n\toptions\t\t: {\n\t\t// Target-specific options\n\t}\n},\n```\n\nHowever, as the `path/to/assets` would become part of the shape IDs, you will most likely want to add a working directory in most cases:\n\n```js\nyour_target: {\n\texpand\t\t: true,\n\tcwd\t\t\t: 'path/to/assets',\n\tsrc\t\t\t: ['**/*.svg'],\n\tdest\t\t: 'path/to/css/dir',\n\toptions\t\t: {\n\t\t// Target-specific options\n\t}\n},\n```\n\n### Options\n\nAs **target-specific options** you may provide a [main configuration object](https://github.com/jkphl/svg-sprite/blob/master/docs/configuration.md) as described in the *svg-sprite* manual. Configuration-wise, *svg-sprite* and *grunt-svg-sprite* differ only in one respect:\n\n#### options.dest → dest\n\nType: `String`\nDefault value: `'.'`\n\nInstead of being nested inside the `options` object, *svg-sprite*'s `dest` property gets **promoted one level up** and becomes part of the Grunt target configuration itself (see examples above).\n\n### Usage Examples\n\n#### Basic example\n\nIn this very basic example, mostly default settings will be applied to create a traditional CSS sprite (bundle of SVG sprite and CSS stylesheet).\n\n```js\ngrunt.initConfig({\n\tsvg_sprite\t\t\t\t\t: {\n\t\tbasic\t\t\t\t\t: {\n\n\t\t\t// Target basics\n\t\t\texpand\t\t\t\t: true,\n\t\t\tcwd\t\t\t\t\t: 'assets',\n\t\t\tsrc\t\t\t\t\t: ['**/*.svg'],\n\t\t\tdest\t\t\t\t: 'out',\n\n\t\t\t// Target options\n\t\t\toptions\t\t\t\t: {\n\t\t\t\tmode\t\t\t: {\n\t\t\t\t\tcss\t\t\t: {\t\t// Activate the «css» mode\n\t\t\t\t\t\trender\t: {\n\t\t\t\t\t\t\tcss\t: true\t// Activate CSS output (with default options)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n```\n\nThe following files and directories are created:\n\n```\nout\n`-- css\n    |-- sprite.css\n    `-- svg\n        `-- sprite.css-495d2010.svg\n```\n\n> The cryptical looking part in the SVG's file name is the result of *svg-sprite*'s cache busting feature which is enabled by default for CSS sprites. We'll turn this off in the next example.\n\n#### More complex example\n\nThe following example is a little more complex:\n\n* We'll create a **«view» CSS sprite** and a **«symbol» sprite** in one go.\n* Instead of CSS, we'll render a **Sass stylesheet** resource for the «view» sprite.\n* We'll **turn off cache busting** for the «view» sprite and create **extra CSS rules specifying each shape's dimensions**.\n* We'll **downscale the SVG shapes** to 32×32 pixels if necessary and **add 10 pixels padding** to all sides.\n* We'll keep the intermediate SVG source files.\n\n```js\ngrunt.initConfig({\n\tsvg_sprite\t\t\t\t\t: {\n\t\tcomplex: {\n\n\t\t\t// Target basics\n\t\t\texpand\t\t\t\t\t: true,\n\t\t\tcwd\t\t\t\t\t\t: 'assets',\n\t\t\tsrc\t\t\t\t\t\t: ['**/*.svg'],\n\t\t\tdest\t\t\t\t\t: 'out',\n\n\t\t\t// Target options\n\t\t\toptions\t\t\t\t\t: {\n\t\t\t\tshape\t\t\t\t: {\n\t\t\t\t\tdimension\t\t: {\t\t\t// Set maximum dimensions\n\t\t\t\t\t\tmaxWidth\t: 32,\n\t\t\t\t\t\tmaxHeight\t: 32\n\t\t\t\t\t},\n\t\t\t\t\tspacing\t\t\t: {\t\t\t// Add padding\n\t\t\t\t\t\tpadding\t\t: 10\n\t\t\t\t\t},\n\t\t\t\t\tdest\t\t\t: 'out/intermediate-svg'\t// Keep the intermediate files\n\t\t\t\t},\n\t\t\t\tmode\t\t\t\t: {\n\t\t\t\t\tview\t\t\t: {\t\t\t// Activate the «view» mode\n\t\t\t\t\t\tbust\t\t: false,\n\t\t\t\t\t\trender\t\t: {\n\t\t\t\t\t\t\tscss\t: true\t\t// Activate Sass output (with default options)\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tsymbol\t\t\t: true\t\t// Activate the «symbol» mode\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n```\n\nThe following files and directories are created:\n\n```\nout\n|-- intermediate-svg\n|   |-- weather-clear.svg\n|   |-- weather-snow.svg\n|   `-- weather-storm.svg\n|-- symbol\n|   `-- svg\n|       `-- sprite.symbol.svg\n`-- view\n    |-- sprite.scss\n    `-- svg\n        `-- sprite.view.svg\n```\n\n#### Advanced features\n\nFor more advanced features like\n\n*\t[custom transformation](https://github.com/jkphl/svg-sprite/blob/master/docs/configuration.md#svg-transformations),\n*\t[meta data injection](https://github.com/jkphl/svg-sprite/blob/master/docs/meta-data.md),\n*\t[customizing output templates](https://github.com/jkphl/svg-sprite/blob/master/docs/templating.md) or\n*\tintroducing new output formats\n\nplease refer to the [svg-sprite manual](https://github.com/jkphl/svg-sprite).\n\n\nContributing\n------------\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n\nChangelog\n---------\n\nPlease refer to the [changelog](CHANGELOG.md) for a complete release history.\n\n\nLegal\n-----\nCopyright © 2015 Joschi Kuphal <joschi@kuphal.net> / [@jkphl](https://twitter.com/jkphl). *grunt-svg-sprite* is licensed under the terms of the [MIT license](LICENSE.txt). The contained example SVG icons are part of the [Tango Icon Library](http://tango.freedesktop.org/Tango_Icon_Library) and belong to the Public Domain.\n\n\n[npm-url]: https://npmjs.org/package/grunt-svg-sprite\n[npm-image]: https://badge.fury.io/js/grunt-svg-sprite.svg\n\n[travis-url]: http://travis-ci.org/jkphl/grunt-svg-sprite\n[travis-image]: https://secure.travis-ci.org/jkphl/grunt-svg-sprite.svg\n\n[depstat-url]: https://david-dm.org/jkphl/grunt-svg-sprite\n[depstat-image]: https://david-dm.org/jkphl/grunt-svg-sprite.svg\n[devdepstat-url]: https://david-dm.org/jkphl/grunt-svg-sprite#info=devDependencies\n[devdepstat-image]: https://david-dm.org/jkphl/grunt-svg-sprite/dev-status.svg\n[peerdepstat-url]: https://david-dm.org/jkphl/grunt-svg-sprite#info=peerDependencies\n[peerdepstat-image]: https://david-dm.org/jkphl/grunt-svg-sprite/peer-status.svg\n",
  "readmeFilename": "README.md",
  "_id": "grunt-svg-sprite@1.2.19",
  "_shasum": "bab157ece37d159968e05abc78e586d5a93d9239",
  "_resolved": "https://registry.npmjs.org/grunt-svg-sprite/-/grunt-svg-sprite-1.2.19.tgz",
  "_from": "https://registry.npmjs.org/grunt-svg-sprite/-/grunt-svg-sprite-1.2.19.tgz"
}
